---
import { getCollection } from "astro:content";
import Layout from "../../../layouts/Layout.astro";
import BlogPost from "../../../components/BlogPost.astro";
import { slugify } from "../../../utils/slugify";

export async function getStaticPaths() {
  const allPosts = await getCollection("blog");
  const uniqueTags = [
    ...new Set(allPosts.map((post: any) => post.data.tags).flat()),
  ];

  return uniqueTags.map((tag) => {
    const filteredPosts = allPosts.filter((post: any) =>
      post.data.tags.includes(tag),
    );
    return {
      params: { tag: slugify(tag) },
      props: { posts: filteredPosts, originalTag: tag },
    };
  });
}

const { tag } = Astro.params;
const { posts, originalTag } = Astro.props;

const title = {
  tab: `Etiqueta: ${originalTag}`,
  page: originalTag,
};

const breadCrumbs = [
  {
    url: "/blog",
    label: "Blog",
  },
  {
    url: "/blog/tags",
    label: "Etiquetas",
  },
  {
    url: "",
    label: originalTag,
  },
];
---

<Layout title={title} breadCrumbs={breadCrumbs}>
  <p>Art√≠culos etiquetados como <i>{originalTag}</i></p>
  <ul class="posts">
    {
      posts.map((post: any) => (
        <BlogPost
          url={post.id}
          title={post.data.title}
          date={post.data.pubDate}
        />
      ))
    }
  </ul>

  <a class="blog-tags" href="/blog/tags">Etiquetas</a>
</Layout>

<style is:inline>
  .posts {
    margin-top: 1em;
  }

  i {
    border-radius: 25px;
    color: var(--accent-color);
    cursor: pointer;
  }

  a {
    display: inline-flex;
    align-items: center;
    color: var(--foreground-color);
    font-size: 0.875em;

    &:hover {
      color: var(--accent-color);
    }

    &.blog-tags {
      margin-top: calc(1em * 2);
    }
  }
</style>
