---
import type { CollectionEntry } from "astro:content";
import "../styles/timeline-item.scss";

type Experience = CollectionEntry<"experience">;

interface Props {
  item: Experience;
  isLast: boolean;
}

const { item, isLast } = Astro.props;
const { entity, interval, location, positions, tags } = item.data;
---

<li class="timeline-item" data-tags={tags.join(",")}>
  <div class="timeline-item__connector">
    <div class="timeline-item__dot"></div>
    {!isLast && <div class="timeline-item__line" />}
  </div>

  <article class="timeline-item__content">
    <header class="timeline-item__header">
      <time class="timeline-item__date">{interval}</time>
      <h3 class="timeline-item__title">{entity.name}</h3>
    </header>

    <div class="timeline-item__entity">
      <img
        src={entity.image.path}
        alt={entity.image.alt}
        class="timeline-item__entity-logo"
        width="30"
        height="30"
      />
      <a
        href={entity.url}
        target="_blank"
        rel="noopener noreferrer"
        class="timeline-item__entity-name"
      >
        {entity.name}
      </a>
      <span class="timeline-item__location">{location}</span>
    </div>

    {
      positions && (
        <ul class="timeline-item__positions">
          {positions.map((position) => (
            <li class="timeline-item__position">
              <h4 class="timeline-item__position-title">{position.title}</h4>
              <ul class="timeline-item__position-description">
                {position.description.split("||").map((description) => (
                  <li>{description}</li>
                ))}
              </ul>
              <p class="timeline-item__position-highlight">{position.highlight}</p>
            </li>
          ))}
        </ul>
      )
    }

    {
      tags && (
        <ul class="timeline-item__tags">
          {tags.map((tag) => (
            <li class="timeline-item__tag">{tag}</li>
          ))}
        </ul>
      )
    }
  </article>
</li>
