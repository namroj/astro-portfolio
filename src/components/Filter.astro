---
const { tags } = Astro.props;
---

<div class="filters">
  <form id="searchForm" class="search-form">
    <div class="search-wrapper">
      <input
        type="search"
        id="searchInput"
        placeholder="Buscar por palabra clave"
        class="search-input"
      />
      <button
        type="button"
        class="clear-search"
        id="clearSearch"
        style="display: none;"
      >
        ✕
      </button>
    </div>
  </form>

  <div class="tags-filter">
    <button class="tag-btn active" data-tag="all">Todas</button>
    {
      tags.map((tag: string) => (
        <button class="tag-btn" data-tag={tag}>
          {tag}
        </button>
      ))
    }
    <button id="clearTags" class="clear-tags-btn" style="display: none;"
      >Reiniciar selección</button
    >
  </div>
</div>

<style is:inline>
  .filters {
    margin: 0;
    display: flex;
    flex-direction: column;
    gap: 1em;
  }

  .search-wrapper {
    position: relative;
    width: 100%;
  }

  .search-input {
    width: 100%;
    padding: 0.5em 1em 0.5em 0.5em;
    border-radius: 4px;
    background-color: var(--background-color);
    color: var(--foreground-color);
    border: 1px solid var(--border-color);
    font-size: 0.75em;
  }

  .tags-filter {
    display: flex;
    flex-wrap: wrap;
    gap: 0.5em;
  }

  .tag-btn {
    padding: 0.25em 0.25em;
    border: 1px solid var(--border-color);
    border-radius: 4px;
    background: var(--background-color);
    color: var(--foreground-color);
    cursor: pointer;
    transition: all 0.3s ease;
  }

  .tag-btn.active {
    background: var(--accent-color);
    color: var(--foreground-color);
  }

  @keyframes highlightFade {
    from {
      background-color: var(--accent-color);
    }
    to {
      background-color: var(--accent-muted-color);
    }
  }

  .tag-btn:hover {
    background: var(--accent-color);
    color: var(--background-color);
  }

  .tag-btn.active {
    background: var(--accent-color);
    color: var(--background-color);
    border-color: var(--accent-color);
  }

  .no-results {
    text-align: left;
    border: 1px dot-dash var(--border-color);
  }

  .no-results p {
    color: var(--accent-muted-color);
    margin-bottom: 1em;
  }

  .reset-search-btn {
    padding: 0.5em 1em;
    background: transparent;
    border-radius: 0.5em;
    cursor: pointer;
    font-size: 0.875em;
    transition: all 0.3s ease;
  }

  .reset-search-btn:hover {
    color: var(--accent-color);
  }

  .clear-search {
    position: absolute;
    right: 0.5em;
    top: 50%;
    transform: translateY(-50%);
    background: none;
    border: none;
    padding: 0.25em 0.5em;
    cursor: pointer;
    transition: all 0.2s ease;
    color: var(--accent-muted-color);
  }

  .clear-search:hover {
    color: var(--accent-color);
  }

  .clear-tags-btn {
    padding: 0.25em 0.5em;
    border: 1px solid var(--accent-color);
    border-radius: 4px;
    background: var(--background-color);
    color: var(--accent-color);
    cursor: pointer;
    transition: all 0.3s ease;
    margin-left: auto;
  }

  .clear-tags-btn:hover {
    background: var(--accent-color);
    color: var(--background-color);
  }
</style>

<script>
  import "../scripts/filter.ts";
</script>
