---
import "../styles/timeline-item.css";
import type { JobPosition } from "../types/env";

const { item, isLast, type } = Astro.props;
const data = item.data;

const title = type === "project" ? data.name : data.entity?.name || data.title;
const date = type === "project" ? data.year : data.interval;
const location = data.location;
const description = type !== "experience" ? data.description : undefined;
const tags = data.tags || data.projTags;
const logo = type === "project" ? data.logo : data.entity?.image;
const url = type === "project" ? data.url : data.entity?.url;
---

<li class="timeline-item" data-tags={tags?.join(",")}>
  <div class="connector">
    <div class="dot"></div>
    {!isLast && <div class="line" />}
  </div>

  <article class="content">
    <header class="header">
      <time class="date">{date}</time>
      <h3 class="title">{title}</h3>
    </header>

    <div class="entity">
      {logo && (
        <img
          src={logo.path}
          alt={logo.alt || `${title} logo`}
          class={type === "project" ? "logo" : "entity-logo"}
          width={type === "project" ? "200" : "30"}
          height={type === "project" ? "200" : "30"}
          style={logo.bg_color && type === "project" ? `background-color: ${logo.bg_color}` : ""}
        />
      )}
      <a href={url} target="_blank" rel="noopener noreferrer" class="entity-name">
        {title}
      </a>
      <span class="location">{location}</span>
    </div>

    {type === "project" && data.summary && <p class="summary">{data.summary}</p>}
    {description && <p class="description">{description}</p>}

    {type === "experience" && data.positions && (
      <ul class="positions">
        {data.positions.map((position: JobPosition) => (
          <li class="position">
            <h4 class="position-title">{position.title}</h4>
            <ul class="position-description">
              {position.description.split("||").map((desc: string) => (
                <li>{desc}</li>
              ))}
            </ul>
            {position.highlight && (
              <p class="position-highlight">{position.highlight}</p>
            )}
          </li>
        ))}
      </ul>
    )}

    {tags && (
      <ul class="tags">
        {tags.map((tag: string) => (
          <li class="tag">{tag}</li>
        ))}
      </ul>
    )}

    {type === "education" && data.certificate && (
      <a href={data.certificate} class="certificate" target="_blank" rel="noopener noreferrer">
        Ver certificado
      </a>
    )}
  </article>
</li>
